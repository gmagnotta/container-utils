---
- name: Initialize an OCP Cluster with Project and essentials secrets
  hosts: localhost
  vars:
    project: "myproject"
    registry_username: "myuser"
    registry_password: "mypassword"
  tasks:

    - name: Create Project
      kubernetes.core.k8s:
        name: "{{ project }}"
        api_version: project.openshift.io/v1
        kind: Project
        state: present

    - name: Apply Label
      command: "oc label namespace {{ project }} name={{ project }}" 

    - name: Create secret
      command: "oc create secret docker-registry redhatregistryio --docker-server=registry.redhat.io --docker-username={{ registry_username }} --docker-password={{ registry_password }} -n {{ project }}" 
    - name: Link secret to default
      command: "oc secrets link default redhatregistryio --for=pull -n {{ project }}"
    - name: Link secret to builder
      command: "oc secrets link builder redhatregistryio -n {{ project }}"

    - name: Create OperatorGroup
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1
          kind: OperatorGroup
          metadata:
            name: "{{ project }}"
            namespace: "{{ project }}"
          spec:
            targetNamespaces:
              - "{{ project }}"
            upgradeStrategy: Default

# Grant view role permission to a user
# oc adm policy add-role-to-user view <user> -n <project>

# Grang view role permission to a group
# oc adm policy add-role-to-group view <group> -n <project>

# view - This role allows read-only access within a given namespace. It does not allow viewing or modifying of roles or role bindings. 
# edit - This role grants read/write access within a given Kubernetes namespace. It cannot view or modify roles or role bindings.
# admin - This role permits unlimited read/write access to resources within a namespace. This role can create roles and role bindings within a particular namespace. It does not permit write access to the namespace itself.
# cluster-admin - This “superuser” can perform any action on any resource in a cluster. You can use this in a ClusterRoleBinding to grant full control over every resource in the cluster (and in all namespaces) or in a RoleBinding to grant full control over every resource in the respective namespace.
