#
# Example PgAdmin4 deployment
#
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    template: pgadmin4
  name: pgadmin4
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pgadmin4
    template: pgadmin4
    app.kubernetes.io/name: pgadmin4
    app.kubernetes.io/part-of: pgadmin4
  name: pgadmin4
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pgadmin4
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pgadmin4
    spec:
      containers:
      - image: docker.io/dpage/pgadmin4:8.2
        imagePullPolicy: IfNotPresent
        name: pgadmin4
        env:
          - name: PGADMIN_LISTEN_PORT
            value: '8080'
          - name: PGADMIN_DEFAULT_EMAIL
            value: 'gmagnott@redhat.com'
          - name: PGADMIN_DEFAULT_PASSWORD
            value: 'password'
          - name: PGADMIN_LISTEN_ADDRESS
            value: '0.0.0.0'
          - name: PGADMIN_DISABLE_POSTFIX
            value: "true"
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 4Gi
          requests:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/pgadmin
          name: pgadmin4-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: pgadmin4-data
        persistentVolumeClaim:
          claimName: pgadmin4
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pgadmin4
    template: pgadmin4
  name: pgadmin4
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: pgadmin4
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: pgadmin4
    template: pgadmin4
  name: pgadmin4
spec:
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: pgadmin4
    weight: 100
  wildcardPolicy: None
